apply plugin: 'com.android.application'

def packageTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileSdkVersion 24
    buildToolsVersion "24.0.0"
    defaultConfig {
        applicationId "example.com.fan"
        minSdkVersion 17
        targetSdkVersion 20
        versionCode 29
        versionName "1.2.8"
        ndk {
            //选择要添加的对应cpu类型的.so库（不需要的删除即可）。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "de9f3a021374e233fc9e8d89", //JPush上注册的包名对应的appkey（*换成你的*）
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    productFlavors {
        //市场渠道;
        vivo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "1f2720441bbd"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "b57184eb4568"]
        }
        yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "993d98d7b680"]
        }
        lenovo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "e2b57507ec83"]
        }
        leshi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "6d21e9faf258"]
        }
        sougou {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "131e882287a1"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "c7e18d335270"]
        }
        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "ebe8cd9f230e"]
        }
        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "da9243d73295"]
        }
        Samsung {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "2184f998f9b7"]
        }
        s360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "705fd562e242"]
        }
/*        jifeng {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "383a1f1e937c"]
        }
        anzhi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "c8fcee5a7b0a"]
        }
        mumayi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "5948e4a49256"]
        }*/

        //自定渠道;
        liushangyu007 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "a3f35abe78ce"]
        }
   /*     aaa1 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "3ceafb99478c"]
        }
        aaa2 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "8ed92cb4c3fe"]
        }
        ceshi1 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "758a30c71003"]
        }
        ceshi2 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "80d756003b97"]
        }*/
        //应用宝微下载渠道;
        wuyi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "d7ac947753cd"]
        }
        yyb1 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "87a1dc8d4203"]
        }
        yyb2 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "3bcc588ae737"]
        }
        yyb3 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "e5cde943b8d1"]
        }
        yyb4 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "6b62d2bbfdb4"]
        }
        yyb5 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "1947e9922bd8"]
        }
        yyb6 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "a66b7f908977"]
        }
        yyb7 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "b1bd280dd99c"]
        }
        yyb8 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "2e1c4385ef88"]
        }
        yyb9 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "a101a6c12122"]
        }
        yyb10 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "110641cf1274"]
        }
        yyb11 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "30c1061248f9"]
        }
        yyb12 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "71564dbac7d1"]
        }
        yyb13 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "b6b167ebeaec"]
        }
        yyb14 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "d07cfa31ef6a"]
        }
        yyb15 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "a46cacbf7013"]
        }
        yyb16 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "0a56bdfa4718"]
        }
        yyb17 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "f9de6b99bae9"]
        }
        yyb18 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "0cf6196c3ecb"]
        }
        yyb19 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "ebd9a5bd746f"]
        }
        yyb20 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "deec96e362f4"]
        }
        yyb21 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "2e0d2de18826"]
        }

    }

    sourceSets {
        main {
            //jni库的调用会到资源文件夹下libs里面找so文件
            jniLibs.srcDirs = ['libs']
        }
    }

    task nativeLibsToJar(type: Zip, description: "create a jar archive of the native libs") {
        destinationDir file("$projectDir/libs")
        baseName "Native_Libs2"
        extension "jar"
        from fileTree(dir: "libs", include: "**/*.so")
        into "lib"
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(nativeLibsToJar)
    }


    buildTypes {
        release {
            //混淆
            minifyEnabled true
            shrinkResources true//移除未使用的资源文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
//    ${defaultConfig.versionCode}-${defaultConfig.versionName}.apk"
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //这里修改apk文件名
                def fileName = "${variant.productFlavors[0].name}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}
repositories {
    jcenter()
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:24.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.squareup.okio:okio:1.8.0'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
//    compile files('libs/okhttp-3.3.1.jar')
    compile 'com.android.support:cardview-v7:24.2.0'
    compile 'jp.wasabeef:glide-transformations:2.0.2'
    // If you want to use the GPU Filters
    compile 'com.github.chrisbanes:PhotoView:1.2.6'
    compile 'com.liaoinstan.springview:library:1.2.6'

    compile 'com.android.support:design:24.2.0'
    compile 'com.journeyapps:zxing-android-embedded:3.3.0'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.5.0'
    compile project(':umenglibrarys')
    compile project(':jcvideoplayer')
//    compile files('libs/utovr_player_1.0.5513.jar')
    compile 'com.zhy:okhttputils:2.6.2'
    compile 'com.balysv.materialmenu:material-menu:2.0.0'

    compile files('libs/gson-1.7.1.jar')
    compile files('libs/libammsdk.jar')
    compile 'cn.jiguang:jpush:2.1.8'
    compile files('libs/alipaySdk-20170623-proguard.jar')
    //内存检测工具
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    //(测试)卡片叠加效果compile;
//    compile 'com.github.mcxtzhang:ZLayoutManager:V1.1.0'
    //(测试)tablayout扩展效果compile;
    //compile 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
}
